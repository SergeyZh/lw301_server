#!/usr/bin/env python3
# coding: utf-8
import logging
import sys
import os.path

import tornado.options
from tornado.options import define, options
from tornado.ioloop import IOLoop
from tornado.web import Application

import lw301_server_app.state
from lw301_server_app.handler.logging import LoggingHandler
from lw301_server_app.handler.update import UpdateHandler
from lw301_server_app.handler import api

logger = logging.getLogger(os.path.basename(__file__).replace('.py', ''))


def build_app(debug=False):
    return Application(
        handlers=[
            (r'^/update.*$', UpdateHandler),
            (r'^/api/history/temperature', api.TemperatureHistoryApiHandler),
            (r'^/api/history/pressure', api.PressureHistoryApiHandler),
            (r'^/api/history/humidity', api.HumidityHistoryApiHandler),
            (r'.*', LoggingHandler)
        ],
        debug=debug,
        lw301_state=lw301_server_app.state.State(),
        logger=logger
    )


def define_options():
    define('port', default=47265, type=int, help='bind port')
    define('address', default='127.0.0.1', type=str, help='bind address')
    define('debug', default=False, type=bool, help='debug mode')


if __name__ == "__main__":
    define_options()
    tornado.options.parse_command_line()
    application = build_app(debug=options.debug)
    logger.info('Starting server at {}:{}'.format(options.address, options.port))
    application.listen(options.port, options.address)
    try:
        IOLoop.current().start()
    except KeyboardInterrupt:
        logger.info('Server stopped')
        sys.exit(0)
